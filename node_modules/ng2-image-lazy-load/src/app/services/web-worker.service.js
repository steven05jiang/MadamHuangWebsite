"use strict";
var core_1 = require('@angular/core');
var WebWorkerService = (function () {
    function WebWorkerService() {
        this.activeWorkers = [];
    }
    WebWorkerService.prototype.load = function (config, msgFn, errorFn) {
        if (typeof (config) !== 'object') {
            throw ("config must be an Object with method and url defined.");
        }
        else if (!config.url) {
            throw ("config.url must be defined.");
        }
        var id = Math.floor(Math.random() * 1000000000000);
        var w = new Worker(WebWorkerService.workerUrl);
        if (msgFn) {
            w.addEventListener('message', msgFn, false);
        }
        if (errorFn) {
            w.addEventListener('error', errorFn, false);
        }
        this.activeWorkers.push({
            id: id,
            worker: w,
            msgFn: msgFn,
            errorFn: errorFn
        });
        w.postMessage(config);
        return id;
    };
    WebWorkerService.prototype.terminate = function (id) {
        var index = this.activeWorkers.findIndex(function (item) { return item.id === id; });
        if (index > -1) {
            var activeWorker = this.activeWorkers[index];
            if (activeWorker && activeWorker.worker) {
                if (activeWorker.worker.msgFn) {
                    activeWorker.worker.removeEventListener('message', activeWorker.worker.msgFn);
                }
                if (activeWorker.worker.errorFn) {
                    activeWorker.worker.removeEventListener('error', activeWorker.worker.errorFn);
                }
                activeWorker.worker.terminate();
            }
            this.activeWorkers.splice(index, 1);
        }
    };
    WebWorkerService.supported = typeof (Worker) !== 'undefined';
    WebWorkerService.enabled = true; // enabled by default, however can be manually turned off
    WebWorkerService.workerUrl = 'assets/js/xhrWorker.js';
    WebWorkerService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], WebWorkerService);
    return WebWorkerService;
}());
exports.WebWorkerService = WebWorkerService;
//# sourceMappingURL=web-worker.service.js.map